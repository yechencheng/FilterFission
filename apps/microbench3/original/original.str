void->void pipeline original{
	int n = (1<<11)+2;
	add source(n);
	add s1(n);
	add s2(n);
	add printer();
}

void->int filter source(int n){
	work push n*n{
		for(int i = 0; i < n; i++)
			for(int j = 0; j < n; j++)
				push(j);
	}
}

int->void filter printer(){
	work pop 1{
		//print(peek(0));
		pop();
	}
}

int->int filter s1(int n){
	work pop n*n push n*(n-2){
		int[n][n] data;
		int[n][n] blurx;
		for(int i = 0; i < n; i++)
			for(int j = 0; j < n; j++)
				data[i][j] = pop();
		for(int i = 0; i < n; i++)
			for(int j = 1; j < n - 1; j++)
				blurx[i][j] = (blurx[i][j-1]+blurx[i][j]+blurx[i][j+1])/3;
		for(int i = 0; i < n; i++)
			for(int j = 1; j < n - 1; j++)
				push(blurx[i][j]);
	}
}

int->int filter s2(int n){
	work pop n*(n-2) push (n-2)*(n-2){
		int[n][n] data;
		int[n][n] blury;
		for(int i = 0; i < n; i++)
			for(int j = 1; j < n-1; j++)
				data[i][j] = pop();
		for(int i = 1; i < n - 1; i++)
			for(int j = 1; j < n-1; j++)
				blury[i][j] = (blury[i-1][j] + blury[i][j] + blury[i+1][j])/3;
		for(int i = 1; i < n-1; i++)
			for(int j = 1; j < n-1; j++)
				push(blury[i][j]);
	}
}